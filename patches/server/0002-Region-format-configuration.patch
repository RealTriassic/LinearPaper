From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Triassic <techbyteofficial9@gmail.com>
Date: Fri, 22 Sep 2023 23:27:14 +0300
Subject: [PATCH] Region format configuration


diff --git a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
index 2874bc3001c4e7d9191e47ba512c5a68369c21f1..4b4e796b1084c2e65f06fa1554f4dfd04379ed2b 100644
--- a/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/GlobalConfiguration.java
@@ -30,6 +30,15 @@ public class GlobalConfiguration extends ConfigurationPart {
         return instance;
     }
 
+    // LinearPaper start
+    public RegionFormat regionFormat;
+
+    public class RegionFormat extends ConfigurationPart {
+        public int linearFlushFrequency = 10;
+        public int linearFlushThreads = 1;
+    }
+    // LinearPaper end
+
     public ChunkLoadingBasic chunkLoadingBasic;
 
     public class ChunkLoadingBasic extends ConfigurationPart {
diff --git a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
index efc91ff91827872c62b8bd060282549ccdcf67dd..fa5fc8148baffe455c038555b2f885b0745e133a 100644
--- a/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
+++ b/src/main/java/io/papermc/paper/configuration/WorldConfiguration.java
@@ -56,6 +56,7 @@ import org.spongepowered.configurate.objectmapping.ConfigSerializable;
 import org.spongepowered.configurate.objectmapping.meta.PostProcess;
 import org.spongepowered.configurate.objectmapping.meta.Required;
 import org.spongepowered.configurate.objectmapping.meta.Setting;
+import org.stupidcraft.linearpaper.region.RegionFileFormat; // LinearPaper
 
 @SuppressWarnings({"FieldCanBeLocal", "FieldMayBeFinal", "NotNullFieldNotInitialized", "InnerClassMayBeStatic"})
 public class WorldConfiguration extends ConfigurationPart {
@@ -77,6 +78,15 @@ public class WorldConfiguration extends ConfigurationPart {
     @Setting(Configuration.VERSION_FIELD)
     public int version = CURRENT_VERSION;
 
+    // LinearPaper start
+    public RegionFormat regionFormat;
+
+    public class RegionFormat extends ConfigurationPart {
+        public RegionFileFormat regionFormatName = RegionFileFormat.ANVIL;
+        public int regionFormatLinearCompressionLevel = 1;
+    }
+    // LinearPaper end
+
     public Anticheat anticheat;
 
     public class Anticheat extends ConfigurationPart {
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index c814d92940fa46a6211fe5f8587414b7f6fb0232..f67a21d09d09a7968eff831cc6606f93b9504c89 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -888,7 +888,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             // Paper start - rewrite chunk system
             worldserver.save((ProgressListener) null, flush, worldserver.noSave && !force, close);
             if (flush) {
-                MinecraftServer.LOGGER.info("ThreadedAnvilChunkStorage ({}): All chunks are saved", worldserver.getChunkSource().chunkMap.getStorageName());
+                MinecraftServer.LOGGER.info("ThreadedChunkStorage ({}): All chunks are saved", worldserver.getChunkSource().chunkMap.getStorageName()); // LinearPaper
             }
             // Paper end - rewrite chunk system
         }
@@ -912,7 +912,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 //MinecraftServer.LOGGER.info("ThreadedAnvilChunkStorage ({}): All chunks are saved", worldserver2.getChunkSource().chunkMap.getStorageName()); // Paper - move up
             }
 
-            MinecraftServer.LOGGER.info("ThreadedAnvilChunkStorage: All dimensions are saved");
+            MinecraftServer.LOGGER.info("ThreadedChunkStorage: All dimensions are saved"); // LinearPaper
         }
 
         return flag3;
diff --git a/src/main/java/org/stupidcraft/linearpaper/region/RegionFileFormat.java b/src/main/java/org/stupidcraft/linearpaper/region/RegionFileFormat.java
new file mode 100644
index 0000000000000000000000000000000000000000..64831ea14eef5cd7a9c3bcf87517ea8dd7d26795
--- /dev/null
+++ b/src/main/java/org/stupidcraft/linearpaper/region/RegionFileFormat.java
@@ -0,0 +1,16 @@
+package org.stupidcraft.linearpaper.region;
+
+public enum RegionFileFormat {
+    ANVIL,
+    LINEAR,
+    INVALID;
+
+    public static RegionFileFormat fromString(String format) {
+        for (RegionFileFormat rff : values()) {
+            if (rff.name().equalsIgnoreCase(format)) {
+                return rff;
+            }
+        }
+        return RegionFileFormat.INVALID;
+    }
+}
